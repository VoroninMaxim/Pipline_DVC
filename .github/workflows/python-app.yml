name: DVC Workflow

on:
  push:
    branches:
      - main

  schedule:
    - cron: "* 1 * * *"

jobs:
  dvc_operations:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Decrypt large secret
        run: |
          chmod +x ./decrypt_secret.sh  # Ensure the script is executable
          # LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}
          ./decrypt_secret.sh
        env:
          LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}
      - name: Test printing your secret (Remove this step in production)
        run: dvc remote modify storage --local gdrive_service_account_json_file_path ./.dvc/service_account.json


      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10.5"

      - name: Install DVC
        run: |
          pip install dvc
          pip install dvc-gdrive
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi


      # - name: Commit and push HTML file
      #   run: |
      #     decrypt_secret.sh
      #   env:
      #     LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}
      # - name: Test printing your secret (Remove this step in production)
      #   run: dvc remote modify storage --local gdrive_service_account_json_file_path $HOME/.dvc/service_account.json
        


      # - name: Pull data with DVC
      #   env:
      #     GDRIVE_CREDENTIALS_DATA: ${{ secrets.SECRETS_GOOGL }}
      #   run: |
      #     dvc remote add -d -f storage gdrive://1CUWjhnRnxFJQe1eN8FCLoyHXE4Fvd5rD
      #     # dvc remote modify storage --local gdrive_use_service_account true
      #     dvc remote modify storage --local gdrive_service_account_json_file_path /dev/null
      #     dvc repro
      #     dvc push

      - name: Configure DVC remote
        run: |
          dvc repro

      - name: Configure DVC push
        run: |
          dvc push

      - name: Configure DVC pull
        run: |
          dvc pull --force          
