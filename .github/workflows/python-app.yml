name: DVC Workflow

on:
  push:
    branches:
      - main

jobs:
  dvc_operations:
    runs-on: ubuntu-latest
    steps:
      # - name: Checkout code
      #   uses: actions/checkout@v2

      # - name: Use secret
      #   run: |
      #     echo "Using secret for operations"
      #     # Example command that uses the secret
      #     # Replace this with your actual command
      #     echo "Secret value length: ${#LARGE_SECRET_PASSPHRASE}"
      #     if [ -n "$LARGE_SECRET_PASSPHRASE" ]; then
      #       echo "Secret is set and not empty"
      #     else
      #       echo "Secret is not set or is empty"
      #     fi
      #   env:
      #     LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}
      #     ACTIONS_STEP_DEBUG: true
        
    
      - uses: actions/checkout@v3
      - name: Decrypt large secret
        run: |
          chmod +x ./decrypt_secret.sh  # Ensure the script is executable
          ./decrypt_secret.sh
        env:
          LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}

      - name: Test printing your secret (Remove this step in production)
        run: cat ./.dvc/service_account.json
          
      - name: Install DVC
        run: |
          pip install dvc
          pip install dvc-gdrive
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Test printing your secret (Remove this step in production)
        run: |
         dvc remote list
         dvc remote modify storage gdrive_use_service_account true
         dvc remote modify storage gdrive_service_account_json_file_path ./.dvc/service_account.json

      - name: Configure DVC remote
        run: |
          dvc repro

      - name: Configure DVC push
        run: |
          dvc push

      - name: Configure DVC pull
        run: |
          dvc pull --force          
